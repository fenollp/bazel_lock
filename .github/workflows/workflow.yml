on: push
name: Tests
env:
  BAZEL: bazelisk
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # For bazel-lock
  BAZELISK_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
jobs:
  test_on_ubuntu:
    name: RUN TESTS ON ubuntu
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    # Running locked
    - run: cd example_http_archive_bare && $BAZEL run hello
    - run: cd example_http_archive_locked && $BAZEL run hello
    - run: cd example_http_archive_locked_upgradable && $BAZEL run hello
    - run: cd example_git_repository_bare && $BAZEL run hello
    - run: cd example_git_repository_locked && $BAZEL run hello
    - run: git --no-pager diff && [ 0 -eq "$(git diff | wc -l)" ]
    # Updating dependencies
    - run: $BAZEL clean --expunge
    - run: cd example_http_archive_locked && ../bazel-lock hello
    - run: cd example_git_repository_locked && ../bazel-lock hello
    - run: git --no-pager diff && [ 0 -eq "$(git diff | wc -l)" ]
    - run: cd example_http_archive_locked_upgradable && ../bazel-lock hello
    - run: git --no-pager diff && [ 8 -eq "$(git diff | wc -l)" ]
    # Running unlocked
    - run: for lockfile in example_*locked*/LOCKFILE.bzl; do echo 'locked = {}'>$lockfile; done
    - run: cd example_http_archive_locked && $BAZEL run hello
    - run: cd example_http_archive_locked_upgradable && ! $BAZEL run hello
    - run: cd example_git_repository_locked && $BAZEL run hello

  test_on_macos:
    name: RUN TESTS ON macos
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    # Running locked
    - run: cd example_http_archive_bare && $BAZEL run hello
    - run: cd example_http_archive_locked && $BAZEL run hello
    - run: cd example_http_archive_locked_upgradable && $BAZEL run hello
    - run: cd example_git_repository_bare && $BAZEL run hello
    - run: cd example_git_repository_locked && $BAZEL run hello
    - run: git --no-pager diff && [ 0 -eq "$(git diff | wc -l)" ]
    # Updating dependencies
    - run: $BAZEL clean --expunge
    - run: cd example_http_archive_locked && ../bazel-lock hello
    - run: cd example_git_repository_locked && ../bazel-lock hello
    - run: git --no-pager diff && [ 0 -eq "$(git diff | wc -l)" ]
    - run: cd example_http_archive_locked_upgradable && ../bazel-lock hello
    - run: git --no-pager diff && [ 8 -eq "$(git diff | wc -l)" ]
    # Running unlocked
    - run: for lockfile in example_*locked*/LOCKFILE.bzl; do echo 'locked = {}'>$lockfile; done
    - run: cd example_http_archive_locked && $BAZEL run hello
    - run: cd example_http_archive_locked_upgradable && ! $BAZEL run hello
    - run: cd example_git_repository_locked && $BAZEL run hello

  test_on_windows:
    name: RUN TESTS ON windows
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    # Running locked
    - run: cd example_http_archive_bare && $BAZEL run hello
      shell: bash
    - run: cd example_http_archive_locked && $BAZEL run hello
      shell: bash
    - run: cd example_http_archive_locked_upgradable && $BAZEL run hello
      shell: bash
    - run: cd example_git_repository_bare && $BAZEL run hello
      shell: bash
    - run: cd example_git_repository_locked && $BAZEL run hello
      shell: bash
    - run: git --no-pager diff && [ 0 -eq "$(git diff | wc -l)" ]
      shell: bash
    # Updating dependencies
    - run: $BAZEL clean --expunge
      shell: bash
    - run: cd example_http_archive_locked && ../bazel-lock hello
      shell: bash
    - run: cd example_git_repository_locked && ../bazel-lock hello
      shell: bash
    - run: git --no-pager diff && [ 0 -eq "$(git diff | wc -l)" ]
      shell: bash
    - run: |
        curl --version
        jq --version
        grep --version
        head --version
        curl -#fSL -H "authorization: token $GITHUB_TOKEN" https://api.github.com/repos/bazelbuild/bazel-skylib/releases
        cd example_http_archive_locked_upgradable && ../bazel-lock hello
      shell: bash
    - run: git --no-pager diff && [ 8 -eq "$(git diff | wc -l)" ]
      shell: bash
    # Running unlocked
    - run: for lockfile in example_*locked*/LOCKFILE.bzl; do echo 'locked = {}'>$lockfile; done
      shell: bash
    - run: cd example_http_archive_locked && $BAZEL run hello
      shell: bash
    - run: cd example_http_archive_locked_upgradable && ! $BAZEL run hello
      shell: bash
    - run: cd example_git_repository_locked && $BAZEL run hello
      shell: bash
